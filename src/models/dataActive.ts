/**
 * Shell EVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { nullable, object, optional, Schema, string } from '../schema';
import {
  DataActiveSessionCodeEnum,
  dataActiveSessionCodeEnumSchema,
} from './dataActiveSessionCodeEnum';
import {
  DataActiveSessionStateEnum,
  dataActiveSessionStateEnumSchema,
} from './dataActiveSessionStateEnum';

export interface DataActive {
  /** Id of the session */
  id?: string;
  /** Id of the user that started the session */
  userId?: string;
  /** Id of the evse that the user is charging */
  emaId?: string;
  /** Electric Vehicle Supply Equipment Identifier. An EVSEID identifies a Charging Point. */
  evseId?: string;
  /** When the session is started */
  startedAt?: string;
  /** When the session is stopped */
  stoppedAt?: string | null;
  /** Describes the session state */
  sessionState?: DataActiveSessionStateEnum;
  /** Session code e.g InternalError */
  sessionCode?: DataActiveSessionCodeEnum | null;
  /** Session message */
  sessionMessage?: string | null;
}

export const dataActiveSchema: Schema<DataActive> = object({
  id: ['Id', optional(string())],
  userId: ['UserId', optional(string())],
  emaId: ['EmaId', optional(string())],
  evseId: ['EvseId', optional(string())],
  startedAt: ['StartedAt', optional(string())],
  stoppedAt: ['StoppedAt', optional(nullable(string()))],
  sessionState: ['SessionState', optional(dataActiveSessionStateEnumSchema)],
  sessionCode: [
    'SessionCode',
    optional(nullable(dataActiveSessionCodeEnumSchema)),
  ],
  sessionMessage: ['SessionMessage', optional(nullable(string()))],
});
